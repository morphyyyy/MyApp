<div class="blazor-modal @(Visible ? "show fade-in" : "")" @onclick="Cancel" tabindex="-1" role="dialog">
    <div class="modal-dialog" @onclick:stopPropagation role="document">
        <div class="modal-content">
            <div class="modal-header px-4 py-3 bg-@Type.ToString().ToLower() bg-opacity-50 d-flex justify-content-between align-items-center">
                <h5 class="modal-title mb-0">@Title</h5>
                <button type="button" class="btn-close" aria-label="Close" @onclick="Cancel"></button>
            </div>
            <div class="modal-body m-4">
                <p>@Message</p>
            </div>
            <div class="modal-footer px-4 py-3">
                <button class="btn btn-secondary me-2" @onclick="Cancel">Cancel</button>
                <button class="btn btn-@Type.ToString().ToLower()" @onclick="Confirm">OK</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Confirm";
    [Parameter] public string Message { get; set; } = "Are you sure?";
    [Parameter] public ConfirmType Type { get; set; } = ConfirmType.Primary;

    private TaskCompletionSource<bool>? tcs;
    private bool Visible { get; set; }

    public async Task<bool> ShowAsync(string title, string message, ConfirmType type = ConfirmType.Primary)
    {
        tcs = new TaskCompletionSource<bool>(TaskCreationOptions.RunContinuationsAsynchronously);
        Title = title;
        Message = message;
        Type = type;
        Visible = true;
        StateHasChanged();
        return await tcs.Task;
    }

    private void Confirm()
    {
        Visible = false;
        tcs?.TrySetResult(true);
    }

    private void Cancel()
    {
        Visible = false;
        tcs?.TrySetResult(false);
    }

    public enum ConfirmType
    {
        Primary,
        Secondary,
        Success,
        Danger,
        Warning,
        Info,
        Light,
        Dark
    }
}
