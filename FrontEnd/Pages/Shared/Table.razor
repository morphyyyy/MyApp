@using Models.DTOs

@if (Items == null)
{
	<h3>Loading...</h3>
}
else
{
	<table id="transactionsTable" class="table table-striped sortable">
		<thead>
			<tr>
				@Columns
			</tr>
		</thead>
		<tbody>
			@if (!Items.Any())
			{
				<tr>
					<td class="text-center" colspan=5> Loading... </td>
				</tr>
			}
			else
			{
				@for (int i = 0; i < Items.Count(); i++)
				{
					int Id = @Items[i].Id;
					<tr class="item">
						<td sorttable_customkey="@Items[i].Date">
							@Items[i].Date.ToString("dddd, MMMM dd, yyyy")
						</td>
						<td>
							@Items[i].Description
						</td>
						<td class="text-end" style="color:@(Items[i].Amount > 0 ? "green" : "red")">
							$@Math.Abs(Items[i].Amount).ToString("N2")
						</td>
						<td class="text-end">
							$@Items[i].Balance.ToString("N2")
						</td>
						<td class="text-center">
							@* <i class="bi bi-dash-lg btn btn-danger btn-sm rounded-circle" @onclick="@(() => Delete(Id))"></i> *@
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
}



@code {
    [Parameter]
	public IList<TransactionDTO> Items { get; set; }

    [Parameter]
    public RenderFragment? Columns { get; set; }
}
