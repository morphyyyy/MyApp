@page "/transactions2"
@using FrontEnd.Services.Contracts;
@using Models.DTOs
@inherits TransactionsBase
@inject ITransactionService TransactionService

<div class="row m-3">
    <div class="col-12">
        <h3 class="float-start">Transactions</h3>
        <button class="float-end btn btn-success"><i class="bi bi-plus-circle" @onclick="@(() => Create(newTransactionDTO))"></i> Add Transaction</button>
    </div>
</div>

<Grid TItem="TransactionDTO"
    Class="table table-hover table-bordered table-striped"
    Style="--bs-table-hover-bg: PaleGreen; --bb-table-selected-row-background-color: LightGreen;"
    DataProvider="TransactionsDataProvider"
    AllowSelection="true"
    SelectionMode="GridSelectionMode.Multiple"
    AllowFiltering="true"
    AllowSorting="true"
    AllowPaging="true"
    PageSize="15"
    HeaderRowCssClass="bg-success text-white border-bottom-0"
    FiltersRowCssClass="bg-success text-white bg-opacity-25 border-bottom-0"
    Responsive="true"
    AllowRowClick="true"
    OnRowClick="OnRowClick">

    <GridColumns>
        <GridColumn TItem="TransactionDTO" 
        HeaderText="Date" 
        HeaderTextAlignment="Alignment.Center"
        PropertyName="Date"
        SortKeySelector="item => item.Date">
            @context.Date.ToString("dddd, MMMM dd, yyyy")
        </GridColumn>

        <GridColumn TItem="TransactionDTO" 
        HeaderText="Description" 
        HeaderTextAlignment="Alignment.Center"
        PropertyName="Description"
        SortKeySelector="item => item.Description">
            @context.Description
        </GridColumn>

        <GridColumn TItem="TransactionDTO" 
        HeaderText="Amount" 
        HeaderTextAlignment="Alignment.Center"
        TextAlignment="Alignment.End"
        PropertyName="Amount"
        SortKeySelector="item => item.Amount"
        ColumnClass="@(item => item.Amount > 0 ? "text-success" : "text-danger")">
            $@context.Amount.ToString("N2")
        </GridColumn>

        <GridColumn TItem="TransactionDTO" 
        HeaderText="Balance" 
        HeaderTextAlignment="Alignment.Center"
        TextAlignment="Alignment.End" 
        PropertyName="Balance"
        SortKeySelector="item => item.Balance">
            $@context.Balance.ToString("N2")
        </GridColumn>

    </GridColumns>

</Grid>

@code {
    [Inject] ModalService ModalService { get; set; } = default!;

    private IEnumerable<TransactionDTO> Transactions = default!;

    private async Task<GridDataProviderResult<TransactionDTO>> TransactionsDataProvider(GridDataProviderRequest<TransactionDTO> request)
    {
        if (Transactions is null)
            Transactions = (await TransactionService.List()).OrderByDescending(t => t.Date).ToList();

        return await Task.FromResult(request.ApplyTo(Transactions));
    }

    private async Task OnRowClick(GridRowEventArgs<TransactionDTO> args)
    {
        await ModalService.ShowAsync(new ModalOption
        {
            Type = args.Item.Amount > 0 ? ModalType.Success : ModalType.Danger,
            Title = $"{args.Item.Date.ToString("dddd, MMMM dd, yyyy")} - {args.Item.Description}",
            Message = $"${args.Item.Amount.ToString("N2")}",
        });
    }

}